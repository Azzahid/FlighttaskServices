
package com.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightService", targetNamespace = "http://service.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightService {


    /**
     * 
     * @param flight
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createFlight", targetNamespace = "http://service.com/", className = "com.service.CreateFlight")
    @ResponseWrapper(localName = "createFlightResponse", targetNamespace = "http://service.com/", className = "com.service.CreateFlightResponse")
    @Action(input = "http://service.com/FlightService/createFlightRequest", output = "http://service.com/FlightService/createFlightResponse")
    public boolean createFlight(
        @WebParam(name = "Flight", targetNamespace = "")
        Flight flight);

    /**
     * 
     * @param destinationAirportId
     * @param price
     * @param quota
     * @param flightId
     * @param company
     * @param boardingTime
     * @param departureAirportId
     * @param quality
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateFlightData", targetNamespace = "http://service.com/", className = "com.service.UpdateFlightData")
    @ResponseWrapper(localName = "updateFlightDataResponse", targetNamespace = "http://service.com/", className = "com.service.UpdateFlightDataResponse")
    @Action(input = "http://service.com/FlightService/updateFlightDataRequest", output = "http://service.com/FlightService/updateFlightDataResponse")
    public boolean updateFlightData(
        @WebParam(name = "flightId", targetNamespace = "")
        int flightId,
        @WebParam(name = "destinationAirportId", targetNamespace = "")
        int destinationAirportId,
        @WebParam(name = "departureAirportId", targetNamespace = "")
        int departureAirportId,
        @WebParam(name = "Company", targetNamespace = "")
        String company,
        @WebParam(name = "Quota", targetNamespace = "")
        int quota,
        @WebParam(name = "Price", targetNamespace = "")
        double price,
        @WebParam(name = "Quality", targetNamespace = "")
        String quality,
        @WebParam(name = "BoardingTime", targetNamespace = "")
        XMLGregorianCalendar boardingTime);

    /**
     * 
     * @param flightId
     * @param totalPasenger
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addQuota", targetNamespace = "http://service.com/", className = "com.service.AddQuota")
    @ResponseWrapper(localName = "addQuotaResponse", targetNamespace = "http://service.com/", className = "com.service.AddQuotaResponse")
    @Action(input = "http://service.com/FlightService/addQuotaRequest", output = "http://service.com/FlightService/addQuotaResponse")
    public boolean addQuota(
        @WebParam(name = "flightId", targetNamespace = "")
        int flightId,
        @WebParam(name = "totalPasenger", targetNamespace = "")
        int totalPasenger);

    /**
     * 
     * @param flightId
     * @param totalPasenger
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "decreaseQuota", targetNamespace = "http://service.com/", className = "com.service.DecreaseQuota")
    @ResponseWrapper(localName = "decreaseQuotaResponse", targetNamespace = "http://service.com/", className = "com.service.DecreaseQuotaResponse")
    @Action(input = "http://service.com/FlightService/decreaseQuotaRequest", output = "http://service.com/FlightService/decreaseQuotaResponse")
    public boolean decreaseQuota(
        @WebParam(name = "flightId", targetNamespace = "")
        int flightId,
        @WebParam(name = "totalPasenger", targetNamespace = "")
        int totalPasenger);

    /**
     * 
     * @param flightId
     * @return
     *     returns com.service.Flight
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlightData", targetNamespace = "http://service.com/", className = "com.service.GetFlightData")
    @ResponseWrapper(localName = "getFlightDataResponse", targetNamespace = "http://service.com/", className = "com.service.GetFlightDataResponse")
    @Action(input = "http://service.com/FlightService/getFlightDataRequest", output = "http://service.com/FlightService/getFlightDataResponse")
    public Flight getFlightData(
        @WebParam(name = "flightId", targetNamespace = "")
        int flightId);

    /**
     * 
     * @param boardingTime
     * @return
     *     returns java.util.List<com.service.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlightsFromDate", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromDate")
    @ResponseWrapper(localName = "getFlightsFromDateResponse", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromDateResponse")
    @Action(input = "http://service.com/FlightService/getFlightsFromDateRequest", output = "http://service.com/FlightService/getFlightsFromDateResponse")
    public List<Flight> getFlightsFromDate(
        @WebParam(name = "BoardingTime", targetNamespace = "")
        XMLGregorianCalendar boardingTime);

    /**
     * 
     * @param destinationAirportID
     * @param boardingTime
     * @param departureAirportID
     * @return
     *     returns java.util.List<com.service.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlightsFromAirportAndDate", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromAirportAndDate")
    @ResponseWrapper(localName = "getFlightsFromAirportAndDateResponse", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromAirportAndDateResponse")
    @Action(input = "http://service.com/FlightService/getFlightsFromAirportAndDateRequest", output = "http://service.com/FlightService/getFlightsFromAirportAndDateResponse")
    public List<Flight> getFlightsFromAirportAndDate(
        @WebParam(name = "destinationAirportID", targetNamespace = "")
        int destinationAirportID,
        @WebParam(name = "departureAirportID", targetNamespace = "")
        int departureAirportID,
        @WebParam(name = "BoardingTime", targetNamespace = "")
        XMLGregorianCalendar boardingTime);

    /**
     * 
     * @param departureLocationID
     * @param destinationLocationID
     * @return
     *     returns java.util.List<com.service.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlightsFromLocation", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromLocation")
    @ResponseWrapper(localName = "getFlightsFromLocationResponse", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromLocationResponse")
    @Action(input = "http://service.com/FlightService/getFlightsFromLocationRequest", output = "http://service.com/FlightService/getFlightsFromLocationResponse")
    public List<Flight> getFlightsFromLocation(
        @WebParam(name = "destinationLocationID", targetNamespace = "")
        int destinationLocationID,
        @WebParam(name = "departureLocationID", targetNamespace = "")
        int departureLocationID);

    /**
     * 
     * @param destinationAirportId
     * @param price
     * @param quota
     * @param company
     * @param boardingTime
     * @param departureAirportId
     * @param quality
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createFlightFromData", targetNamespace = "http://service.com/", className = "com.service.CreateFlightFromData")
    @ResponseWrapper(localName = "createFlightFromDataResponse", targetNamespace = "http://service.com/", className = "com.service.CreateFlightFromDataResponse")
    @Action(input = "http://service.com/FlightService/createFlightFromDataRequest", output = "http://service.com/FlightService/createFlightFromDataResponse")
    public boolean createFlightFromData(
        @WebParam(name = "destinationAirportId", targetNamespace = "")
        int destinationAirportId,
        @WebParam(name = "departureAirportId", targetNamespace = "")
        int departureAirportId,
        @WebParam(name = "Company", targetNamespace = "")
        String company,
        @WebParam(name = "Quota", targetNamespace = "")
        int quota,
        @WebParam(name = "Price", targetNamespace = "")
        double price,
        @WebParam(name = "Quality", targetNamespace = "")
        String quality,
        @WebParam(name = "BoardingTime", targetNamespace = "")
        XMLGregorianCalendar boardingTime);

    /**
     * 
     * @param destinationAirportID
     * @param departureAirportID
     * @return
     *     returns java.util.List<com.service.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlightsFromAirport", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromAirport")
    @ResponseWrapper(localName = "getFlightsFromAirportResponse", targetNamespace = "http://service.com/", className = "com.service.GetFlightsFromAirportResponse")
    @Action(input = "http://service.com/FlightService/getFlightsFromAirportRequest", output = "http://service.com/FlightService/getFlightsFromAirportResponse")
    public List<Flight> getFlightsFromAirport(
        @WebParam(name = "destinationAirportID", targetNamespace = "")
        int destinationAirportID,
        @WebParam(name = "departureAirportID", targetNamespace = "")
        int departureAirportID);

}
