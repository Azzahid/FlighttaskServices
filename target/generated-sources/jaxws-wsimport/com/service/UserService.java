
package com.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserService", targetNamespace = "http://service.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserService {


    /**
     * 
     * @param password
     * @param name
     * @param username
     * @return
     *     returns com.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://service.com/", className = "com.service.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://service.com/", className = "com.service.RegisterResponse")
    @Action(input = "http://service.com/UserService/registerRequest", output = "http://service.com/UserService/registerResponse")
    public User register(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param userId
     * @param token
     * @return
     *     returns java.util.List<com.service.Booking>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMyBooking", targetNamespace = "http://service.com/", className = "com.service.GetMyBooking")
    @ResponseWrapper(localName = "getMyBookingResponse", targetNamespace = "http://service.com/", className = "com.service.GetMyBookingResponse")
    @Action(input = "http://service.com/UserService/getMyBookingRequest", output = "http://service.com/UserService/getMyBookingResponse")
    public List<Booking> getMyBooking(
        @WebParam(name = "userId", targetNamespace = "")
        int userId,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param userId
     * @param token
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkToken", targetNamespace = "http://service.com/", className = "com.service.CheckToken")
    @ResponseWrapper(localName = "checkTokenResponse", targetNamespace = "http://service.com/", className = "com.service.CheckTokenResponse")
    @Action(input = "http://service.com/UserService/checkTokenRequest", output = "http://service.com/UserService/checkTokenResponse")
    public boolean checkToken(
        @WebParam(name = "userId", targetNamespace = "")
        int userId,
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns com.service.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service.com/", className = "com.service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service.com/", className = "com.service.LoginResponse")
    @Action(input = "http://service.com/UserService/loginRequest", output = "http://service.com/UserService/loginResponse")
    public User login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

}
